name: Deploy to ECS

on:
  push:
    branches:
      - main  # Run the pipeline on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Login to AWS ECR
    - name: Login to AWS ECR
      uses: aws-actions/amazon-ecr-login@v2
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Step 3: Build Docker Image
    - name: Build Docker Image
      run: |
        cd VideoPose3D
        # Build Docker image with a simple name without any tags
        docker build -t videopose3d-test .

    # Step 4: Push Docker Image to ECR
    - name: Push Docker Image to ECR
      run: |
        # Correct tag format for ECR
        docker tag videopose3d-test:latest 997523936640.dkr.ecr.us-east-1.amazonaws.com/videopose3d-test:latest
        # Push the image to ECR
        docker push 997523936640.dkr.ecr.us-east-1.amazonaws.com/videopose3d-test:latest

    # Step 5: Update ECS Service with new image (no new task definition)
    - name: Update ECS Service with new image
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.AWS_ECS_CLUSTER_NAME }} \
          --service ${{ secrets.AWS_ECS_SERVICE_NAME }} \
          --force-new-deployment \
          --region ${{ secrets.AWS_REGION }}
