name: Deploy to ECS

on:
  push:
    branches:
      - main  # Run the pipeline on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Login to AWS ECR
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Step 3: Build and Tag Docker Image
    - name: Build and Tag Docker Image
      run: |
        IMAGE_TAG=$(date +%Y%m%d%H%M%S)
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        docker build -t ${{ secrets.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
        docker tag ${{ secrets.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} \
          ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

    # Step 4: Push Docker Image to ECR
    - name: Push Docker Image to ECR
      run: |
        docker push ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

    # Step 5: Update ECS Service with the new image tag (no new task definition)
    - name: Update ECS Service with new image
      run: |
        # Update ECS service with the new image tag in the existing task definition
        aws ecs update-service \
          --cluster ${{ secrets.AWS_ECS_CLUSTER_NAME }} \
          --service ${{ secrets.AWS_ECS_SERVICE_NAME }} \
          --force-new-deployment \
          --region ${{ secrets.AWS_REGION }} \
          --image ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

    # Step 6: Run the container with specific runtime options
    - name: Run Docker container with specific runtime options on ECS
      run: |
        # Run ECS task with NVIDIA runtime and GPUs enabled
        aws ecs run-task \
          --cluster ${{ secrets.AWS_ECS_CLUSTER_NAME }} \
          --launch-type EC2 \
          --task-definition ${{ secrets.AWS_ECS_TASK_DEFINITION }} \
          --overrides '{"containerOverrides":[{"name":"${{ secrets.AWS_ECS_CONTAINER_NAME }}","command":["/bin/bash","-c","\"docker run --name testing --runtime=nvidia --gpus all -it videopose3d-local:latest\""]}]}'
          --region ${{ secrets.AWS_REGION }}
